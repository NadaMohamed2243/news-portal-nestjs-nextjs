{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nadam/Downloads/open_source/Nextjs/day2/lab/lab2/src/app/categories/%5Bslug%5D/page.tsx"],"sourcesContent":["import { notFound } from \"next/navigation\";\r\n\r\nexport const dynamic = 'force-dynamic';\r\n\r\ntype Props = {\r\n  params: { slug: string };\r\n};\r\n\r\nasync function getCategory(slug: string) {\r\n  const res = await fetch(`http://localhost:3001/categories/${slug}`, {\r\n    cache: 'no-store', // optionally prevent caching\r\n  });\r\n\r\n  if (!res.ok) return null;\r\n  return res.json();\r\n}\r\n\r\nexport default async function CategorySlugPage({ params }: Props) {\r\n  const slug = await Promise.resolve(params.slug);\r\n  const data = await getCategory(slug);\r\n\r\n  if (!data) return notFound();\r\n\r\n  return (\r\n    <main>\r\n      <h1>{slug.toUpperCase()} News</h1>\r\n      <ul>\r\n        {data.news?.map((item: string, i: number) => (\r\n          <li key={i}>{item}</li>\r\n        ))}\r\n      </ul>\r\n    </main>\r\n  );\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;AAAA;AAAA;;;AAEO,MAAM,UAAU;AAMvB,eAAe,YAAY,IAAY;IACrC,MAAM,MAAM,MAAM,MAAM,CAAC,iCAAiC,EAAE,MAAM,EAAE;QAClE,OAAO;IACT;IAEA,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO;IACpB,OAAO,IAAI,IAAI;AACjB;AAEe,eAAe,iBAAiB,EAAE,MAAM,EAAS;IAC9D,MAAM,OAAO,MAAM,QAAQ,OAAO,CAAC,OAAO,IAAI;IAC9C,MAAM,OAAO,MAAM,YAAY;IAE/B,IAAI,CAAC,MAAM,OAAO,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IAEzB,qBACE,8OAAC;;0BACC,8OAAC;;oBAAI,KAAK,WAAW;oBAAG;;;;;;;0BACxB,8OAAC;0BACE,KAAK,IAAI,EAAE,IAAI,CAAC,MAAc,kBAC7B,8OAAC;kCAAY;uBAAJ;;;;;;;;;;;;;;;;AAKnB","debugId":null}}]
}